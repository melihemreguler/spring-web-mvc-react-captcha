name: Build and Deploy Captcha App

on:
  push:
    branches:
      - main
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build and Push Backend
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          melihemreguler/captcha-backend:latest
          melihemreguler/captcha-backend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and Push Frontend
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          melihemreguler/captcha-frontend:latest
          melihemreguler/captcha-frontend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Setup SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to EC2
      run: |
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          # Clean up disk space first
          echo "Cleaning up disk space..."
          
          # Remove Docker build cache and unused containers/networks/volumes
          docker system prune -af --volumes
          
          # Remove ALL unused Docker images (more aggressive)
          docker image prune -af
          docker rmi $(docker images -f "dangling=true" -q) 2>/dev/null || true
          
          # Clean apt cache and system files
          sudo apt-get autoremove -y
          sudo apt-get autoclean
          sudo apt-get clean
          
          # Remove old log files (more aggressive)
          sudo journalctl --vacuum-time=1d
          sudo find /var/log -type f -name "*.log" -exec truncate -s 0 {} \; 2>/dev/null || true
          
          # Clean temporary files
          sudo rm -rf /tmp/* 2>/dev/null || true
          sudo rm -rf /var/tmp/* 2>/dev/null || true
          
          # Check disk space after cleanup
          echo "Disk usage after cleanup:"
          df -h /
          
          # Navigate to existing project directory
          cd /home/ubuntu/spring-web-mvc-react-captcha

          # Update repository
          git fetch origin
          git reset --hard origin/master
          
          # Check if we have enough disk space (need at least 2GB free)
          AVAILABLE_KB=$(df / | tail -1 | awk '{print $4}')
          AVAILABLE_GB=$((AVAILABLE_KB / 1024 / 1024))
          echo "Available disk space: ${AVAILABLE_GB}GB"
          
          if [ $AVAILABLE_GB -lt 2 ]; then
            echo "ERROR: Not enough disk space for deployment. Need at least 2GB free."
            echo "Current usage:"
            df -h /
            exit 1
          fi

          # Create .env file with secrets
          cat > .env << EOL
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_NAME=${{ secrets.DB_NAME }}
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          LETSENCRYPT_EMAIL=${{ secrets.LETSENCRYPT_EMAIL }}
        EOL

          # Stop existing containers to free up more space
          echo "Stopping existing containers..."
          docker compose down --remove-orphans
          
          # Remove old images of our application to free space
          docker rmi melihemreguler/captcha-backend:latest 2>/dev/null || true
          docker rmi melihemreguler/captcha-frontend:latest 2>/dev/null || true

          # Pull latest images (one at a time to manage disk space)
          echo "Pulling backend image..."
          docker pull melihemreguler/captcha-backend:latest
          
          echo "Pulling frontend image..."
          docker pull melihemreguler/captcha-frontend:latest

          # Start new containers
          echo "Starting new containers..."
          docker compose up -d

          # Clean up again after successful deployment
          docker image prune -af

          # Show final status
          echo "Deployment complete!"
          docker compose ps
          df -h /
        EOF
